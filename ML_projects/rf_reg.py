# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/algorithms/regressions/random_forest_reg.ipynb.

# %% auto 0
__all__ = ['TrainRFReg']

# %% ../nbs/algorithms/regressions/random_forest_reg.ipynb 3
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import RandomizedSearchCV
from skopt import BayesSearchCV
from sklearn.metrics import r2_score

from . import const_vals as CONST


# %% ../nbs/algorithms/regressions/random_forest_reg.ipynb 4
class TrainRFReg():
  def __init__(self,
      hyper_method : str , #hyperparameter tunning method. accepts : 'randomized' 'bayesian' 
      hyper_params : dict = CONST.random_grid_rf , #parameters for hyperparameter tunning
      ):
     self.hyper_method = hyper_method
     self.hyper_params = hyper_params

     #generate random forest regressor 
     self.model = RandomForestRegressor()

  def hyperparameter(self):
     
     if self.hyper_method == 'randomized':
       
       rf_random = RandomizedSearchCV(estimator = self.model, 
                                      param_distributions = CONST.random_grid_rf,
                                      n_iter = CONST.n_iteration_rf,
                                      cv = CONST.cv_rf, 
                                      verbose=CONST.VERBOSE , 
                                      random_state=CONST.RANDOM_STATE , 
                                      n_jobs = CONST.N_JOBS)
        
     
     







    
    
    
    
