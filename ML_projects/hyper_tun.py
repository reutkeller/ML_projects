# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/hyperparameter.ipynb.

# %% auto 0
__all__ = ['HyperparameterTunning']

# %% ../nbs/hyperparameter.ipynb 3
import numpy as np
import pandas as pd
# from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import RandomizedSearchCV
from skopt import BayesSearchCV,gp_minimize
from skopt.space import Real, Integer
from skopt.utils import use_named_args
from sklearn.model_selection import cross_val_score
import matplotlib.pyplot as plt
from sklearn.metrics import r2_score,mean_absolute_error, mean_squared_error

from . import const_vals as CONST


# %% ../nbs/hyperparameter.ipynb 4
class HyperparameterTunning():
  def __init__(self,
               model ,  # model to be hyperparameter tuned
               train_test_data : list , # list with train/test data , in this order : [x_train,x_test,y_train,y_test]
               hyper_method : str , #hyperparameter tunning method. accepts : 'randomized' 'bayesian' , 'bayesian continous'
               hyper_params : dict = CONST.RANDOM_GRID_RFR , #parameters for hyperparameter tunning

               ):
        
        self.hyper_method = hyper_method
        self.hyper_params = hyper_params

        self.x_train = train_test_data[0]
        self.x_test = train_test_data[1]
        self.y_train = train_test_data[2]
        self.y_test = train_test_data[3]


        


    


