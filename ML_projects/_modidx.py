# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/ML_projects',
                'doc_host': 'https://reutkeller.github.io',
                'git_url': 'https://github.com/reutkeller/ML_projects',
                'lib_path': 'ML_projects'},
  'syms': { 'ML_projects.const_vals': {},
            'ML_projects.core': {'ML_projects.core.foo': ('core.html#foo', 'ML_projects/core.py')},
            'ML_projects.hyper_tun': { 'ML_projects.hyper_tun.HyperparameterTunning': ( 'hyperparameter.html#hyperparametertunning',
                                                                                        'ML_projects/hyper_tun.py'),
                                       'ML_projects.hyper_tun.HyperparameterTunning.__init__': ( 'hyperparameter.html#hyperparametertunning.__init__',
                                                                                                 'ML_projects/hyper_tun.py'),
                                       'ML_projects.hyper_tun.HyperparameterTunning.hyperparameter': ( 'hyperparameter.html#hyperparametertunning.hyperparameter',
                                                                                                       'ML_projects/hyper_tun.py')},
            'ML_projects.regress_ml': { 'ML_projects.regress_ml.TrainRegression': ( 'train_ml_regression.html#trainregression',
                                                                                    'ML_projects/regress_ml.py'),
                                        'ML_projects.regress_ml.TrainRegression.__init__': ( 'train_ml_regression.html#trainregression.__init__',
                                                                                             'ML_projects/regress_ml.py'),
                                        'ML_projects.regress_ml.TrainRegression._create_best_model': ( 'train_ml_regression.html#trainregression._create_best_model',
                                                                                                       'ML_projects/regress_ml.py'),
                                        'ML_projects.regress_ml.TrainRegression._load_df_split_data': ( 'train_ml_regression.html#trainregression._load_df_split_data',
                                                                                                        'ML_projects/regress_ml.py'),
                                        'ML_projects.regress_ml.TrainRegression._match_models_': ( 'train_ml_regression.html#trainregression._match_models_',
                                                                                                   'ML_projects/regress_ml.py'),
                                        'ML_projects.regress_ml.TrainRegression.evaluate_model': ( 'train_ml_regression.html#trainregression.evaluate_model',
                                                                                                   'ML_projects/regress_ml.py'),
                                        'ML_projects.regress_ml.TrainRegression.hyperparameter': ( 'train_ml_regression.html#trainregression.hyperparameter',
                                                                                                   'ML_projects/regress_ml.py')},
            'ML_projects.rf_reg': { 'ML_projects.rf_reg.TrainRFReg': ('random_forest_reg.html#trainrfreg', 'ML_projects/rf_reg.py'),
                                    'ML_projects.rf_reg.TrainRFReg.__init__': ( 'random_forest_reg.html#trainrfreg.__init__',
                                                                                'ML_projects/rf_reg.py'),
                                    'ML_projects.rf_reg.TrainRFReg.evaluate_model': ( 'random_forest_reg.html#trainrfreg.evaluate_model',
                                                                                      'ML_projects/rf_reg.py'),
                                    'ML_projects.rf_reg.TrainRFReg.hyperparameter': ( 'random_forest_reg.html#trainrfreg.hyperparameter',
                                                                                      'ML_projects/rf_reg.py')}}}
